{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\lrmorosin\\\\src\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Input from \"./Input\";\nimport Boards from \"./Boards\";\nimport Modal from \"./Modal\";\nimport Auth from \"./Auth\";\nimport { addTask, deleteTask, getAllTasks, updateTask } from \"./http/table\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [boards, setBoards] = useState([{\n    id: 0,\n    title: 'ToDo',\n    list: []\n  }, {\n    id: 1,\n    title: 'InProgress',\n    list: []\n  }, {\n    id: 2,\n    title: 'Done',\n    list: []\n  }]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [active, setActive] = useState(false);\n  const getBoards = async () => {\n    const result = await getAllTasks(currentUser.id);\n    setBoards(transformArray(result.tasks));\n  };\n  const transformArray = array => {\n    const newBoards = [{\n      id: 0,\n      title: 'ToDo',\n      list: []\n    }, {\n      id: 1,\n      title: 'InProgress',\n      list: []\n    }, {\n      id: 2,\n      title: 'Done',\n      list: []\n    }];\n    array.map(elem => {\n      newBoards[elem.boardInd].list.splice(elem.position, 0, {\n        id: elem._id,\n        body: elem.title,\n        userId: elem.user\n      });\n    });\n    return newBoards;\n  };\n  useEffect(() => {\n    if (currentUser !== null) {\n      getBoards();\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    if (currentUser === null && localStorage.getItem('token')) {\n      setCurrentUser(jwtDecode(localStorage.getItem('token')));\n    }\n  });\n  const addNewTask = task => {\n    const sendNewTask = async task => {\n      const position = boards[0].list.length;\n      await addTask({\n        title: task,\n        position,\n        user: currentUser.id\n      });\n    };\n    const findBiggestId = () => {\n      return Math.max(...boards.map(board => board.list).flat().map(item => item.id)) + 1;\n    };\n    const newBoards = [...boards];\n    const newId = findBiggestId();\n    newBoards[0].list.push({\n      id: newId,\n      body: task\n    });\n    setBoards(newBoards);\n    sendNewTask(task).then(r => getBoards());\n  };\n  const removeTask = (board, task) => {\n    const sendDeleteTask = async (boardId, taskId) => {\n      const taskForDelete = boards[boardId].list[taskId].id;\n      await deleteTask(taskForDelete);\n    };\n    const newBoards = [...boards];\n    const boardId = boards.indexOf(board);\n    const taskId = boards[boardId].list.indexOf(task);\n    sendDeleteTask(boardId, taskId);\n    newBoards[boardId].list.splice(taskId, 1);\n    setBoards(newBoards);\n  };\n  const handleTaskDrop = (prevBoard, newBoard) => {\n    let result = null;\n    setBoards(boards.map(b => {\n      if (b.id === prevBoard.id) {\n        result = prevBoard;\n      } else if (b.id === newBoard.id) {\n        result = newBoard;\n      } else result = b;\n      return result;\n    }));\n  };\n  const moveTaskOnClick = (board, task, step) => {\n    const newBoards = [...boards];\n    const boardIndex = boards.indexOf(board);\n    const taskIndex = boards[boardIndex].list.indexOf(task);\n    updateTask(task.id, {\n      boardInd: boardIndex + step,\n      position: newBoards[boardIndex + step].list.length\n    });\n    newBoards[boardIndex].list.splice(taskIndex, 1);\n    newBoards[boardIndex + step].list.push(task);\n    setBoards(newBoards);\n  };\n  localStorage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [currentUser === null && /*#__PURE__*/_jsxDEV(Auth, {\n      changeUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      addNewTask: addNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Boards, {\n      boards: boards,\n      setBoards: setBoards,\n      removeTask: removeTask,\n      handleTaskDrop: handleTaskDrop,\n      moveTaskOnClick: moveTaskOnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: active,\n      setActive: setActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"XyhgrSN5tcvTuquwWTZ33RJdYqM=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Input","Boards","Modal","Auth","addTask","deleteTask","getAllTasks","updateTask","jwtDecode","jsxDEV","_jsxDEV","Main","_s","boards","setBoards","id","title","list","currentUser","setCurrentUser","active","setActive","getBoards","result","transformArray","tasks","array","newBoards","map","elem","boardInd","splice","position","_id","body","userId","user","localStorage","getItem","addNewTask","task","sendNewTask","length","findBiggestId","Math","max","board","flat","item","newId","push","then","r","removeTask","sendDeleteTask","boardId","taskId","taskForDelete","indexOf","handleTaskDrop","prevBoard","newBoard","b","moveTaskOnClick","step","boardIndex","taskIndex","className","children","changeUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/code/lrmorosin/src/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Input from \"./Input\";\r\nimport Boards from \"./Boards\";\r\nimport Modal from \"./Modal\";\r\nimport Auth from \"./Auth\";\r\nimport {addTask, deleteTask, getAllTasks, updateTask} from \"./http/table\";\r\nimport {jwtDecode} from \"jwt-decode\";\r\n\r\nconst Main = () => {\r\n    const [boards,setBoards] = useState([\r\n        {id:0,title:'ToDo',list:[]},\r\n        {id:1,title:'InProgress',list:[]},\r\n        {id:2,title:'Done',list:[]}\r\n    ])\r\n    const [currentUser,setCurrentUser] = useState(null)\r\n    const [active,setActive] = useState(false)\r\n    const getBoards = async () =>{\r\n        const result = await getAllTasks(currentUser.id)\r\n        setBoards(transformArray(result.tasks))\r\n    }\r\n    const transformArray = (array) =>{\r\n        const newBoards = [\r\n            {id:0,title:'ToDo',list:[]},\r\n            {id:1,title:'InProgress',list:[]},\r\n            {id:2,title:'Done',list:[]}\r\n        ]\r\n        array.map((elem=>{\r\n         newBoards[elem.boardInd].list.splice(elem.position,0,{id:elem._id,body:elem.title,userId:elem.user})\r\n\r\n        }))\r\n        return newBoards\r\n    }\r\n    useEffect(() => {\r\n        if (currentUser!==null){\r\n            getBoards()\r\n        }\r\n    }, [currentUser]);\r\n    useEffect(()=>{\r\n        if (currentUser===null&&localStorage.getItem('token')){\r\n            setCurrentUser(jwtDecode(localStorage.getItem('token')))\r\n        }\r\n    })\r\n    const addNewTask = (task) =>{\r\n        const sendNewTask = async (task) =>{\r\n            const position = boards[0].list.length\r\n            await addTask({title:task,position,user:currentUser.id})\r\n        }\r\n        const findBiggestId = () =>{\r\n            return Math.max(...boards.map(board =>board.list).flat().map(item =>item.id))+1\r\n        }\r\n        const newBoards = [...boards]\r\n        const newId = findBiggestId()\r\n        newBoards[0].list.push({id:newId,body:task})\r\n        setBoards(newBoards)\r\n        sendNewTask(task).then(r=>getBoards())\r\n    }\r\n    const removeTask = (board,task) =>{\r\n        const sendDeleteTask = async (boardId,taskId) =>{\r\n            const taskForDelete = boards[boardId].list[taskId].id\r\n            await deleteTask(taskForDelete)\r\n        }\r\n        const newBoards = [...boards]\r\n        const boardId = boards.indexOf(board)\r\n        const taskId = boards[boardId].list.indexOf(task)\r\n        sendDeleteTask(boardId,taskId)\r\n        newBoards[boardId].list.splice(taskId,1)\r\n        setBoards(newBoards)\r\n    }\r\n    const handleTaskDrop = (prevBoard,newBoard) =>{\r\n        let result = null\r\n        setBoards(boards.map(b =>{\r\n            if (b.id === prevBoard.id){\r\n                result = prevBoard\r\n            }\r\n            else if (b.id === newBoard.id){\r\n                result = newBoard\r\n            }\r\n            else\r\n                result = b\r\n            return result\r\n        }))\r\n    }\r\n    const moveTaskOnClick = (board,task,step) =>{\r\n        const newBoards = [...boards]\r\n        const boardIndex = boards.indexOf(board)\r\n        const taskIndex = boards[boardIndex].list.indexOf(task)\r\n        updateTask(task.id,{boardInd:boardIndex+step,position:newBoards[boardIndex+step].list.length})\r\n        newBoards[boardIndex].list.splice(taskIndex,1)\r\n        newBoards[boardIndex+step].list.push(task)\r\n        setBoards(newBoards)\r\n    }\r\n    localStorage\r\n    return (\r\n        <div className=\"container\">\r\n            {currentUser===null&&<Auth changeUser = {setCurrentUser}/>}\r\n            <Input addNewTask = {addNewTask} />\r\n            {<Boards boards = {boards} setBoards = {setBoards} removeTask = {removeTask} handleTaskDrop= {handleTaskDrop}\r\n            moveTaskOnClick = {moveTaskOnClick}/>}\r\n            <Modal active={active} setActive={setActive}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}