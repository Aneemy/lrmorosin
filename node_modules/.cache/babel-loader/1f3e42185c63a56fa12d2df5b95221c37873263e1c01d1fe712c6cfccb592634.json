{"ast":null,"code":"import React,{useEffect,useState}from'react';import Input from\"./Input\";import Boards from\"./Boards\";import Modal from\"./Modal\";import Auth from\"./Auth\";import{addTask,deleteTask,getAllTasks,updateTask}from\"./http/table\";import{jwtDecode}from\"jwt-decode\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const[boards,setBoards]=useState([{id:0,title:'ToDo',list:[]},{id:1,title:'InProgress',list:[]},{id:2,title:'Done',list:[]}]);const[currentUser,setCurrentUser]=useState(null);const[active,setActive]=useState(false);const getBoards=async()=>{const result=await getAllTasks(currentUser.id);setBoards(transformArray(result.tasks));};localStorage.clear();const transformArray=array=>{const newBoards=[{id:0,title:'ToDo',list:[]},{id:1,title:'InProgress',list:[]},{id:2,title:'Done',list:[]}];array.map(elem=>{newBoards[elem.boardInd].list.splice(elem.position,0,{id:elem._id,body:elem.title,userId:elem.user});});return newBoards;};useEffect(()=>{if(currentUser!==null){getBoards();}},[currentUser]);useEffect(()=>{if(currentUser===null&&localStorage.getItem('token')){setCurrentUser(jwtDecode(localStorage.getItem('token')));}},[]);const addNewTask=task=>{const sendNewTask=async task=>{const position=boards[0].list.length;await addTask({title:task,position,user:currentUser.id});};const findBiggestId=()=>{return Math.max(...boards.map(board=>board.list).flat().map(item=>item.id))+1;};const newBoards=[...boards];const newId=findBiggestId();newBoards[0].list.push({id:newId,body:task});setBoards(newBoards);sendNewTask(task).then(r=>getBoards());};const removeTask=(board,task)=>{const sendDeleteTask=async(boardId,taskId)=>{const taskForDelete=boards[boardId].list[taskId].id;await deleteTask(taskForDelete);};const newBoards=[...boards];const boardId=boards.indexOf(board);const taskId=boards[boardId].list.indexOf(task);sendDeleteTask(boardId,taskId);newBoards[boardId].list.splice(taskId,1);setBoards(newBoards);};const handleTaskDrop=(prevBoard,newBoard)=>{let result=null;setBoards(boards.map(b=>{if(b.id===prevBoard.id){result=prevBoard;}else if(b.id===newBoard.id){result=newBoard;}else result=b;return result;}));};const moveTaskOnClick=(board,task,step)=>{const newBoards=[...boards];const boardIndex=boards.indexOf(board);const taskIndex=boards[boardIndex].list.indexOf(task);updateTask(task.id,{boardInd:boardIndex+step,position:newBoards[boardIndex+step].list.length});newBoards[boardIndex].list.splice(taskIndex,1);newBoards[boardIndex+step].list.push(task);setBoards(newBoards);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[currentUser===null&&/*#__PURE__*/_jsx(Auth,{changeUser:setCurrentUser}),/*#__PURE__*/_jsx(Input,{addNewTask:addNewTask}),/*#__PURE__*/_jsx(Boards,{boards:boards,setBoards:setBoards,removeTask:removeTask,handleTaskDrop:handleTaskDrop,moveTaskOnClick:moveTaskOnClick}),/*#__PURE__*/_jsx(Modal,{active:active,setActive:setActive})]});};export default Main;","map":{"version":3,"names":["React","useEffect","useState","Input","Boards","Modal","Auth","addTask","deleteTask","getAllTasks","updateTask","jwtDecode","jsx","_jsx","jsxs","_jsxs","Main","boards","setBoards","id","title","list","currentUser","setCurrentUser","active","setActive","getBoards","result","transformArray","tasks","localStorage","clear","array","newBoards","map","elem","boardInd","splice","position","_id","body","userId","user","getItem","addNewTask","task","sendNewTask","length","findBiggestId","Math","max","board","flat","item","newId","push","then","r","removeTask","sendDeleteTask","boardId","taskId","taskForDelete","indexOf","handleTaskDrop","prevBoard","newBoard","b","moveTaskOnClick","step","boardIndex","taskIndex","className","children","changeUser"],"sources":["E:/code/lrmorosin/src/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Input from \"./Input\";\r\nimport Boards from \"./Boards\";\r\nimport Modal from \"./Modal\";\r\nimport Auth from \"./Auth\";\r\nimport {addTask, deleteTask, getAllTasks, updateTask} from \"./http/table\";\r\nimport {jwtDecode} from \"jwt-decode\";\r\n\r\nconst Main = () => {\r\n    const [boards,setBoards] = useState([\r\n        {id:0,title:'ToDo',list:[]},\r\n        {id:1,title:'InProgress',list:[]},\r\n        {id:2,title:'Done',list:[]}\r\n    ])\r\n    const [currentUser,setCurrentUser] = useState(null)\r\n    const [active,setActive] = useState(false)\r\n    const getBoards = async () =>{\r\n        const result = await getAllTasks(currentUser.id)\r\n        setBoards(transformArray(result.tasks))\r\n    }\r\n    localStorage.clear()\r\n    const transformArray = (array) =>{\r\n        const newBoards = [\r\n            {id:0,title:'ToDo',list:[]},\r\n            {id:1,title:'InProgress',list:[]},\r\n            {id:2,title:'Done',list:[]}\r\n        ]\r\n        array.map((elem=>{\r\n         newBoards[elem.boardInd].list.splice(elem.position,0,{id:elem._id,body:elem.title,userId:elem.user})\r\n\r\n        }))\r\n        return newBoards\r\n    }\r\n    useEffect(() => {\r\n        if (currentUser!==null){\r\n            getBoards()\r\n        }\r\n    }, [currentUser]);\r\n    useEffect(()=>{\r\n        if (currentUser===null&&localStorage.getItem('token')){\r\n            setCurrentUser(jwtDecode(localStorage.getItem('token')))\r\n        }\r\n    },[])\r\n    const addNewTask = (task) =>{\r\n        const sendNewTask = async (task) =>{\r\n            const position = boards[0].list.length\r\n            await addTask({title:task,position,user:currentUser.id})\r\n        }\r\n        const findBiggestId = () =>{\r\n            return Math.max(...boards.map(board =>board.list).flat().map(item =>item.id))+1\r\n        }\r\n        const newBoards = [...boards]\r\n        const newId = findBiggestId()\r\n        newBoards[0].list.push({id:newId,body:task})\r\n        setBoards(newBoards)\r\n        sendNewTask(task).then(r=>getBoards())\r\n    }\r\n    const removeTask = (board,task) =>{\r\n        const sendDeleteTask = async (boardId,taskId) =>{\r\n            const taskForDelete = boards[boardId].list[taskId].id\r\n            await deleteTask(taskForDelete)\r\n        }\r\n        const newBoards = [...boards]\r\n        const boardId = boards.indexOf(board)\r\n        const taskId = boards[boardId].list.indexOf(task)\r\n        sendDeleteTask(boardId,taskId)\r\n        newBoards[boardId].list.splice(taskId,1)\r\n        setBoards(newBoards)\r\n    }\r\n    const handleTaskDrop = (prevBoard,newBoard) =>{\r\n        let result = null\r\n        setBoards(boards.map(b =>{\r\n            if (b.id === prevBoard.id){\r\n                result = prevBoard\r\n            }\r\n            else if (b.id === newBoard.id){\r\n                result = newBoard\r\n            }\r\n            else\r\n                result = b\r\n            return result\r\n        }))\r\n    }\r\n    const moveTaskOnClick = (board,task,step) =>{\r\n        const newBoards = [...boards]\r\n        const boardIndex = boards.indexOf(board)\r\n        const taskIndex = boards[boardIndex].list.indexOf(task)\r\n        updateTask(task.id,{boardInd:boardIndex+step,position:newBoards[boardIndex+step].list.length})\r\n        newBoards[boardIndex].list.splice(taskIndex,1)\r\n        newBoards[boardIndex+step].list.push(task)\r\n        setBoards(newBoards)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {currentUser===null&&<Auth changeUser = {setCurrentUser}/>}\r\n            <Input addNewTask = {addNewTask} />\r\n            {<Boards boards = {boards} setBoards = {setBoards} removeTask = {removeTask} handleTaskDrop= {handleTaskDrop}\r\n            moveTaskOnClick = {moveTaskOnClick}/>}\r\n            <Modal active={active} setActive={setActive}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}